<body>
  <div class="flex-container">
    <svg class="displayContext">
    </svg>

    <div class="inputForm">
      <form>
        <div class="row" style="padding: 25px; padding-bottom: 10px;">
          <div class="col-sm-4">
            <label> Squat </label>
            <input type="number" class="form-control input-md">
          </div>

          <div class="col-sm-4">
            <label> Bench </label>
            <input type="number" class="form-control input-md">
          </div>

          <div class="col-sm-4">
            <label> Deadlift </label>
            <input type="number" class="form-control input-md">
          </div>
        </div>
        <div class="row" style="padding: 25px; padding-bottom: 10px;">
          <div class="col-sm-12">
            <label> Gender </label>
            <select id="genderSelect" class="form-control">
              <option value="male"> Male   </option>
              <option value="female"> Female </option>
            </select>
          </div>
        </div>
        <div class="row" style="padding: 25px; padding-bottom: 10px;">
          <div class="col-sm-12">
            <label class="p_tooltip">
                Age â“˜
              <span class="p_tooltip_text">
                Age on January 1st
              </span>
            </label>
            <input type="number" class="form-control input-md" title="testing">
          </div>
        </div>
        <div class="row" style="padding: 25px; padding-bottom: 10px;">
          <div class="col-sm-12">
            <label> Weight Class </label>
            <select id="weightSelect" class="form-control">
            </select>
          </div>
        </div>
        <button type="submit" class="submitBtn">Submit</button>
      </form>
    </div>
  </div>
</body>

<script>
  drawChart();
</script>

<script>

  //male/female weight classes
  maWeights=["53", "59", "66", "74", "83", "93", "105", "120", "120+"];
  feWeights=["43", "47", "52", "57", "63", "72", "84", "84+"];

  genderSelect = document.getElementById("genderSelect");
  weightSelect = document.getElementById("weightSelect");

  setWeights(maWeights);

  function setWeights(weightArr){
    $(weightSelect).empty();

    weightArr.forEach(function(value){
      option = document.createElement("option");

      option.innerHTML = value.toString();

      weightSelect.appendChild(option);
    })
  }

  const capitalize = (s) => {
    return s.charAt(0).toUpperCase() + s.slice(1);
  }

  genderSelect.onchange = function() {
    setWeights(this.selectedIndex == 0 ? maWeights : feWeights);
  }

  function getGender()   { return capitalize(genderSelect.value); }

  function getSquat()    { return parseInt(squat.value);        }
  function getBench()    { return parseInt(deadlift.value);     }
  function getWeight()   { return parseInt(weightSelect.value); }
  function getDeadlift() { return parseInt(bench.value);        }
  function getTotal()    { return getSquat() + getBench() + getDeadlift(); }

  const provide = (o, s) => {
    return !isNaN(o) ? o + "kg" : "Please provide a value for " + s;
  }

  const provideAlert = (o, s) => {
    return !isNaN(o) ? null : alert("Please provide a value for " + s);
  }

</script>
